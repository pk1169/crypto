package sm4

import (
	"testing"
	"fmt"
)

func TestSm4_crypt_cbc(t *testing.T) {
	var key  = [16]byte{0xB1,0x22,0xAD,0x0A,0x7A,0x36,0x2E,0xC3,0xAB,0xA1,0xDD,0xEF,0xB3,0xAF,0x49,0x15}
	var iv = [16]byte{0x11,0x11,0x11,0x11,0xd1,0xa1,0x6c,0x20,0x67,0x70,0x8a,0xcb,0xd1,0xa1,0x6c,0x20}
	var input = [32]byte{0x0B,0x0B,0x2B,0x4F,0x54,0x05,0xFE,0xF1,0xE8,0xA2,0x64,0xFC,0x89,0xAB,0x21,0x0A, 0x0B,0x0B,0x2B,0x4F,0x54,0x05,0xFE,0xF1,
		0xE8,0xA2,0x64,0xFC,0x89,0xAB,0x21,0x0A}
	var len int = 32
	var output [32]byte
	ctx := new(sm4_context)
	sm4_setkey_enc(ctx, key)
	Sm4_crypt_cbc(ctx,1, len, iv, input[:], output[:])
	fmt.Println(output)

	sm4_setkey_dec(ctx, key)
	input1 := make([]byte, 32)
	copy(input1, output[:])
	fmt.Println(input1)
	output1 := make([]byte, 32)
	Sm4_crypt_cbc(ctx, 0, len, iv, output[:], output1[:])
	fmt.Println(output1)
}
